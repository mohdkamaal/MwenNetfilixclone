{"ast":null,"code":"import { CreateMoviefailuer, CreateMovieStart, CreateMovieSUCCESS, DeleteMoviefailuer, deleteMovieStart, DeleteMovieSUCCESS, getMoviefailuer, getMovieStart, getMovieSUCCESS, updateMoviefailuer, updateMovieStart, updateMovieSUCCESS } from \"./MoviesAction\";\nimport axios from \"axios\";\nexport const getMovie = async dispatch => {\n  dispatch(getMovieStart());\n\n  try {\n    const res = await axios.get(\"/movie\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    console.log(res);\n    dispatch(getMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(getMoviefailuer());\n  }\n};\nexport const deleteMovie = async (dispatch, id) => {\n  dispatch(deleteMovieStart());\n\n  try {\n    const res = await axios.delete(\"/movie/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    console.log(res);\n    dispatch(DeleteMovieSUCCESS(id));\n  } catch (error) {\n    console.log(error);\n    dispatch(DeleteMoviefailuer());\n  }\n};\nexport const CreateMovie = async (dispatch, movie) => {\n  dispatch(CreateMovieStart());\n\n  try {\n    const res = await axios.post(\"/movie\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    console.log(res);\n    dispatch(CreateMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(CreateMoviefailuer());\n  }\n};\n_c = CreateMovie;\nexport const updateMovie = async (dispatch, movie, id) => {\n  dispatch(updateMovieStart());\n\n  try {\n    const res = await axios.put(\"/movie/\" + id, movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    console.log(res);\n    dispatch(updateMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(updateMoviefailuer());\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMovie\");","map":{"version":3,"sources":["/home/akhilesh/Desktop/Mern/MwenNetfilixclone/admin1/src/context/Moviecontext/apiCalls.js"],"names":["CreateMoviefailuer","CreateMovieStart","CreateMovieSUCCESS","DeleteMoviefailuer","deleteMovieStart","DeleteMovieSUCCESS","getMoviefailuer","getMovieStart","getMovieSUCCESS","updateMoviefailuer","updateMovieStart","updateMovieSUCCESS","axios","getMovie","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","console","log","data","error","deleteMovie","id","delete","CreateMovie","movie","post","updateMovie","put"],"mappings":"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","sourcesContent":["import {\n  CreateMoviefailuer,\n  CreateMovieStart,\n  CreateMovieSUCCESS,\n  DeleteMoviefailuer,\n  deleteMovieStart,\n  DeleteMovieSUCCESS,\n  getMoviefailuer,\n  getMovieStart,\n  getMovieSUCCESS,\n  updateMoviefailuer,\n  updateMovieStart,\n  updateMovieSUCCESS,\n} from \"./MoviesAction\";\nimport axios from \"axios\";\nexport const getMovie = async (dispatch) => {\n  dispatch(getMovieStart());\n  try {\n    const res = await axios.get(\"/movie\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    console.log(res);\n    dispatch(getMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(getMoviefailuer());\n  }\n};\nexport const deleteMovie = async (dispatch, id) => {\n  dispatch(deleteMovieStart());\n  try {\n    const res = await axios.delete(\"/movie/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    console.log(res);\n    dispatch(DeleteMovieSUCCESS(id));\n  } catch (error) {\n    console.log(error);\n    dispatch(DeleteMoviefailuer());\n  }\n};\nexport const CreateMovie = async (dispatch, movie) => {\n  dispatch(CreateMovieStart());\n  try {\n    const res = await axios.post(\"/movie\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    console.log(res);\n    dispatch(CreateMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(CreateMoviefailuer());\n  }\n};\nexport const updateMovie = async (dispatch, movie, id) => {\n  dispatch(updateMovieStart());\n  try {\n    const res = await axios.put(\"/movie/\" + id, movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n    });\n    console.log(res);\n    dispatch(updateMovieSUCCESS(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(updateMoviefailuer());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}