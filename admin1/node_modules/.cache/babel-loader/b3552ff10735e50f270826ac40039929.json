{"ast":null,"code":"var _jsxFileName = \"/home/akhilesh/Desktop/Mern/MwenNetfilixclone/admin1/src/pages/Lists/ListList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Listlist.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { productRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { MoviesContext } from \"../../context/Moviecontext/MoviesContext\";\nimport { deleteMovie, getMovie } from \"../../context/Moviecontext/apiCalls\";\nimport { getLists } from \"../../context/listContext/apiCalls\";\nimport { ListsContext } from \"../../context/listContext/listcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const [data, setData] = useState(productRows);\n  const {\n    Lists,\n    dispatch\n  } = useContext(ListsContext);\n  useEffect(() => {\n    getLists(dispatch);\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    deleteMovie(dispatch, id);\n  };\n\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"movie\",\n    headerName: \"Movie\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productListImg\",\n          src: params.row.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), params.row.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"genre\",\n    headerName: \"Genre\",\n    width: 120\n  }, {\n    field: \"year\",\n    headerName: \"year\",\n    width: 120\n  }, {\n    field: \"limit\",\n    headerName: \"Age Limit\",\n    width: 120\n  }, {\n    field: \"isSeries\",\n    headerName: \"IsSearies\",\n    width: 120\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/product/\" + params.row._id,\n            movie: params.row\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: movies,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true,\n      getRowId: r => r === null || r === void 0 ? void 0 : r._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"lCuUz6w7DqG3zIfBNxly42ETVv8=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/akhilesh/Desktop/Mern/MwenNetfilixclone/admin1/src/pages/Lists/ListList.jsx"],"names":["DataGrid","DeleteOutline","productRows","Link","useContext","useEffect","useState","MoviesContext","deleteMovie","getMovie","getLists","ListsContext","List","data","setData","Lists","dispatch","handleDelete","id","columns","field","headerName","width","renderCell","params","row","image","title","pathname","_id","movie","movies","r"],"mappings":"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","sourcesContent":["import \"./Listlist.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { productRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { MoviesContext } from \"../../context/Moviecontext/MoviesContext\";\nimport { deleteMovie, getMovie } from \"../../context/Moviecontext/apiCalls\";\nimport { getLists } from \"../../context/listContext/apiCalls\";\nimport { ListsContext } from \"../../context/listContext/listcontext\";\n\nexport default function List() {\n  const [data, setData] = useState(productRows);\n\n  const { Lists, dispatch } = useContext(ListsContext)\n  useEffect(() => {\n    getLists(dispatch)\n  }, [dispatch])\n\n     \n  const handleDelete = (id) => {\n    deleteMovie(dispatch,id)\n  };\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"movie\",\n      headerName: \"Movie\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"productListItem\">\n            <img className=\"productListImg\" src={params.row.image} alt=\"\" />\n            {params.row.title}\n          </div>\n        );\n      },\n    },\n    { field: \"genre\", headerName: \"Genre\", width: 120 },\n    { field: \"year\", headerName: \"year\", width: 120 },\n    { field: \"limit\", headerName: \"Age Limit\", width: 120 },\n    { field: \"isSeries\", headerName: \"IsSearies\", width: 120 },\n  \n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={{ pathname: \"/product/\" + params.row._id ,movie:params.row}}>\n              <button className=\"productListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n      \n        rows={movies}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n        getRowId={r=>r?._id}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}